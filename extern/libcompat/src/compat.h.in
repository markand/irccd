/*
 * compat.h -- compatibility definitions
 *
 * Copyright (c) 2013-2021 David Demelier <markand@malikania.fr>
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef LIBCOMPAT_COMPAT_H
#define LIBCOMPAT_COMPAT_H

#cmakedefine COMPAT_HAVE_BASENAME
#cmakedefine COMPAT_HAVE_DIRNAME
#cmakedefine COMPAT_HAVE_ERR
#cmakedefine COMPAT_HAVE_ERRC
#cmakedefine COMPAT_HAVE_ERRX
#cmakedefine COMPAT_HAVE_GETOPT
#cmakedefine COMPAT_HAVE_GETPROGNAME
#cmakedefine COMPAT_HAVE_PLEDGE
#cmakedefine COMPAT_HAVE_REALLOCARRAY
#cmakedefine COMPAT_HAVE_RECALLOCARRAY
#cmakedefine COMPAT_HAVE_SETPROGNAME
#cmakedefine COMPAT_HAVE_STRDUP
#cmakedefine COMPAT_HAVE_STRLCAT
#cmakedefine COMPAT_HAVE_STRLCPY
#cmakedefine COMPAT_HAVE_STRNDUP
#cmakedefine COMPAT_HAVE_STRNLEN
#cmakedefine COMPAT_HAVE_STRSEP
#cmakedefine COMPAT_HAVE_STRTOK_R
#cmakedefine COMPAT_HAVE_STRTONUM
#cmakedefine COMPAT_HAVE_VERR
#cmakedefine COMPAT_HAVE_VERRC
#cmakedefine COMPAT_HAVE_VERRX
#cmakedefine COMPAT_HAVE_VWARN
#cmakedefine COMPAT_HAVE_VWARNC
#cmakedefine COMPAT_HAVE_VWARNX
#cmakedefine COMPAT_HAVE_WARN
#cmakedefine COMPAT_HAVE_WARNC
#cmakedefine COMPAT_HAVE_WARNX

#cmakedefine COMPAT_HAVE_STAT_ST_ATIME
#cmakedefine COMPAT_HAVE_STAT_ST_BLKSIZE
#cmakedefine COMPAT_HAVE_STAT_ST_BLOCKS
#cmakedefine COMPAT_HAVE_STAT_ST_CTIME
#cmakedefine COMPAT_HAVE_STAT_ST_DEV
#cmakedefine COMPAT_HAVE_STAT_ST_GID
#cmakedefine COMPAT_HAVE_STAT_ST_INO
#cmakedefine COMPAT_HAVE_STAT_ST_MODE
#cmakedefine COMPAT_HAVE_STAT_ST_MTIME
#cmakedefine COMPAT_HAVE_STAT_ST_NLINK
#cmakedefine COMPAT_HAVE_STAT_ST_RDEV
#cmakedefine COMPAT_HAVE_STAT_ST_SIZE
#cmakedefine COMPAT_HAVE_STAT_ST_UID

#include <stdarg.h>
#include <stddef.h>

#ifndef COMPAT_HAVE_BASENAME
char *
basename(char *);
#endif

#ifndef COMPAT_HAVE_DIRNAME
char *
dirname(char *);
#endif

#ifndef COMPAT_HAVE_ERR
void
err(int, const char *, ...);
#endif

#ifndef COMPAT_HAVE_ERRC
void
errc(int, int, const char *, ...);
#endif

#ifndef COMPAT_HAVE_ERRX
void
errx(int, const char *, ...);
#endif

#ifndef COMPAT_HAVE_VERR
void
verr(int, const char *, va_list);
#endif

#ifndef COMPAT_HAVE_VERRC
void
verrc(int, int, const char *, va_list);
#endif

#ifndef COMPAT_HAVE_VERRX
void
verrx(int, const char *, va_list);
#endif

#ifndef COMPAT_HAVE_VWARN
void
vwarn(const char *, va_list);
#endif

#ifndef COMPAT_HAVE_VWARNC
void
vwarnc(int, const char *, va_list);
#endif

#ifndef COMPAT_HAVE_VWARNX
void
vwarnx(const char *, va_list);
#endif

#ifndef COMPAT_HAVE_WARN
void
warn(const char *, ...);
#endif

#ifndef COMPAT_HAVE_WARNC
void
warnc(int, const char *, ...);
#endif

#ifndef COMPAT_HAVE_WARNX
void
warnx(const char *, ...);
#endif

#ifndef COMPAT_HAVE_GETOPT
extern int opterr;
extern int optind;
extern int optopt;
extern char *optarg;

int
getopt(int, char **, const char *);
#endif

#ifndef COMPAT_HAVE_GETPROGNAME
const char *
getprogname(void);
#endif

#ifndef COMPAT_HAVE_PLEDGE
int
pledge(const char *, const char *);
#endif

#ifndef COMPAT_HAVE_REALLOCARRAY
void *
reallocarray(void *, size_t, size_t);
#endif

#ifndef COMPAT_HAVE_RECALLOCARRAY
void *
recallocarray(void *, size_t, size_t, size_t);
#endif

#ifndef COMPAT_HAVE_SETPROGNAME
void
setprogname(const char *);
#endif

#ifndef COMPAT_HAVE_STRDUP
char *
strdup(const char *);
#endif

#ifndef COMPAT_HAVE_STRLCAT
size_t
strlcat(char *, const char *, size_t);
#endif

#ifndef COMPAT_HAVE_STRLCPY
size_t
strlcpy(char *, const char *, size_t);
#endif

#ifndef COMPAT_HAVE_STRNDUP
char *
strndup(const char *, size_t);
#endif

#ifndef COMPAT_HAVE_STRNLEN
size_t
strnlen(const char *, size_t);
#endif

#ifndef COMPAT_HAVE_STRSEP
char *
strsep(char **, const char *);
#endif

#ifndef COMPAT_HAVE_STRTOK_R
char *
strtok_r(char *, const char *, char **);
#endif

#ifndef COMPAT_HAVE_STRTONUM
long long
strtonum(const char *, long long, long long, const char **);
#endif

#endif /* !LIBCOMPAT_COMPAT_H */
